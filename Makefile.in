export NO_CUSTOM=1

SOURCES=mysql.mli mysql.ml mysql_stubs.c
RESULT=mysql
VERSION=@PACKAGE_VERSION@

LIBINSTALL_FILES=$(wildcard *.mli *.cmi *.cma *.cmx *.cmxa *.a *.so *.cmxs)

CFLAGS=@CFLAGS@ @DEFS@ -Wall -Wextra
CLIBS=$(foreach lib, @LIBS@, $(subst -l,,${lib}))
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@
export OCAMLMKLIB_FLAGS=@LDFLAGS@
export OCAMLFIND_INSTFLAGS=-patch-version "$(VERSION)"

can_natdynlink := $(shell sh -c 'grep -q "NATDYNLINK=true" $$(ocamlc -where)/Makefile.config; echo $$?')

build: all opt
all: byte-code-library

ifeq (${can_natdynlink},0)
CMXS=mysql.cmxs
endif

opt: native-code-library $(CMXS)
reallyall: byte-code-library native-code-library $(CMXS) htdoc

install: libinstall
uninstall: libuninstall

demos: reallyall
	ocamlc -custom -I . mysql.cma demo.ml -o demo.byte
	$(OCAMLOPT) -I . mysql.cmxa demo.ml -o demo.native
	ocamlc -custom -I . -thread unix.cma threads.cma mysql.cma demo2.ml -o demo2.byte
	$(OCAMLOPT) -I . -thread unix.cmxa threads.cmxa mysql.cmxa demo2.ml -o demo2.native

mysql.cmxs: mysql.cmx
	$(OCAMLOPT) -shared $(foreach flag,@LDFLAGS@, -ccopt ${flag}) mysql_stubs.o $(foreach lib,@LIBS@, -cclib ${lib}) -o mysql.cmxs mysql.cmx

clean-demos:
	rm -f demo*.{byte,native,cm*,o}

clean::
	rm -f mysql.cmxs

cleanall: clean-demos clean-doc clean

-include OCamlMakefile

NAME=ocaml-mysql-$(VERSION)

.PHONY: release
release:
	git tag -a -m $(VERSION) v$(VERSION)
	git archive --prefix=$(NAME)/ v$(VERSION) | gzip > $(NAME).tar.gz
	gpg -a -b $(NAME).tar.gz
